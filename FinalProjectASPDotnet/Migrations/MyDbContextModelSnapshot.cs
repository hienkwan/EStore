// <auto-generated />
using System;
using FinalProjectASPDotnet.Areas.Admin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProjectASPDotnet.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccountType");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.AccountInfo", b =>
                {
                    b.Property<int>("AccountInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("AccountType");

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FullName");

                    b.Property<string>("PhoneNumer");

                    b.HasKey("AccountInfoId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("AccountInfo");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("CustomerAddress")
                        .IsRequired();

                    b.Property<string>("CustomerEmail")
                        .IsRequired();

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<string>("CustomerPhone")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.HasKey("BillId");

                    b.HasIndex("AccountId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.BillDetails", b =>
                {
                    b.Property<int>("BillDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<double>("TotalPrice");

                    b.HasKey("BillDetailsId");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Category", b =>
                {
                    b.Property<int>("CateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("CateID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CateId");

                    b.Property<string>("Describe")
                        .IsRequired();

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<double>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.HasKey("ProductId");

                    b.HasIndex("CateId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Comment");

                    b.Property<int>("ProductId");

                    b.Property<int>("Ratings");

                    b.HasKey("Id");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.TopSelling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<int?>("SellingQuantity");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("TopSelling");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Models.Depot", b =>
                {
                    b.Property<int>("DepotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("DepotId");

                    b.HasIndex("ProductId");

                    b.ToTable("Depot");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.AccountInfo", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Account")
                        .WithOne("AccountInfo")
                        .HasForeignKey("FinalProjectASPDotnet.Areas.Admin.Models.AccountInfo", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Bill", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.BillDetails", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Product", "Product")
                        .WithMany("BillDetail")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.Product", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Category", "category")
                        .WithMany("product")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Areas.Admin.Models.TopSelling", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Product", "Product")
                        .WithMany("TopSelling")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProjectASPDotnet.Models.Depot", b =>
                {
                    b.HasOne("FinalProjectASPDotnet.Areas.Admin.Models.Product", "Product")
                        .WithMany("Depot")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
